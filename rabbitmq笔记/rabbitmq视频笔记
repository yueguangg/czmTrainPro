	rabbitmq视频笔记：
	
	rabbitmq是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据。

	Server: 又称Broker，接受客户端的连接，实现AMQP实体服务。

	Connection：连接，应用程序与Broker的网络连接。

	Channel: 网络信道，几乎所有的操作都在Channel中进行，Channel是进行消息 读写的通道。客户端可建立多个channel，每个Channel代表一个会话任务。

	Message: 消息，服务器和应用程序之间传送的数据，由Properties和Body组成。Properties可以对消息进行修饰，比如消息的优先级、延迟等高级特性；Body则就是消息体内容。

	Virtual host：虚拟地址，用于进行逻辑隔离，最上层的消息路由。一个Virtual 
	host里面可以有若干个Exchange和Queue，同一个Virtual host里面不能有相同名称的Exchange或Queue。

	1、Exchange: 交换机，接收消息，根据路由键转发消息到绑定的队列。
	常见的交换器类型：fanout、direct、topic、headers
	fanout： 它会把所有发送到该交换机的消息路由到所有与该交换器绑定的队列中。
	direct： direct类型的交换器路由规则也很简单，它会把消息路由到那些BindingKey和RoutingKey完全匹配的队列中。
	topic： direct这种严格匹配方式很多情况不能满足实际业务需求，topic类型的交换器在匹配规则上进行了扩展，它与direct类型的交互器相似，也是将消息路由到bindingkey和routingkey相匹配的队列中，但是这里匹配的规则有些不同，他约定：
		routingkey为一个点号"."分隔的字符串，如"com.rabbitmq.client"..;
		bindingkey和routingkey一样也是点号"."分隔的字符串；
		Bindingkey中可以存在两种特殊的字符串"*"和"#",用于做模糊匹配，其中"#"用于多个单词，"*:用于匹配单个单词。
	headers: 不依赖于路由键的匹配规则来路由消息，而是根据发送的消息内容中的headers属性进行匹配。在绑定队列和交换器时制定一组键值对，当发送消息到交换器时，rabbitmq会获取到该消息的headers(也是一个键值对的形式)，对比其中的键值对是否完全匹配队列和交换器绑定时制定的键值对，如果完全匹配则消息会路由到该队列，否则不会路由到该队列。headers类型的交换器性能会很差，而且也不实用，基本上不会看到它的存在。

	Binding： Exchange和Queue之间的虚拟连接，binding中可以包含routing key。

	Routing key：一个路由规则，虚拟机可用它来确定如何路由一个特定消息。

	Queue：也称为Message Queue，消息队列，保存消息并将它们转发给消费者。


	命令行与管控台基本操作

	rabbitmqctl start_app : 启动应用  /rabbitmq-server -detached   或者： rabbitmq-server start &

	rabbitmqctl stop_app : 关闭应用

	rabbitmq-plugins enable rabbitmq_management : 管理插件
	localhost:15672  

	rabbitmqctl status : 节点状态

	rabbitmqctl add_user username password :添加用户

	rabbitmqctl list_users: 列出所有用户

	rabbitmqctl delete_user username : 删除用户

	rabbitmqctl clear_permissions -p vhostpath username:清除用户权限

	rabbitmqctl add_vhost vhostpath: 创建虚拟主机

	rabbitmqctl list_vhosts：列出所有虚拟主机

	rabbitmqctl list_permissions -p vhostpath:列出虚拟主机上所有权限

	rabbitmqctl delete_vhost vhostpath: 删除虚拟主机

	rabbitmqctl list_queues ：查看所有队列

	rabbitmqctl -p vhostpath purge_queue blue:清除队列里的消息

	rabbitmqctl reset ： 移除所有数据，要在rabbitmqctl stop_app 之后使用

	rabbitmqctl join_cluster <clusternode> [--ram]:组成集群命令

	rabbitmqctl cluster_status: 查看集群状态

	rabbitmqctl change_cluster_node_type dis|ram:修改集群节点的存储形式

	rabbitmqctl forget_cluster_node [--offline] 忘记节点(摘除节点)

	rabbitmqctl rename_cluster_node oldnode1 newnode1 ：修改节点名称


	uname -a  查看系统信息

	ps -ef | grep rabbit  ：查找名为rabbit线程
	kill 端口号  ：杀线程

	lsof -i：5672

	2_10节：
		1、ConnectionFactory : 获取连接工厂
		2、Connection ： 一个连接
		3、Channel ： 数据通信信道，可发送和接收消息
		4、Queue ： 具体的消息存储队列
		5、Producer & Consumer 生产者和消费者